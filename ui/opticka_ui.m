function varargout = opticka_ui(varargin)
% OPTICKA_UI_EXPORT M-file for opticka_ui.fig
%      OPTICKA_UI_EXPORT, by itself, creates a new OPTICKA_UI_EXPORT or raises the existing
%      singleton*.
%
%      H = OPTICKA_UI_EXPORT returns the handle to a new OPTICKA_UI_EXPORT or the handle to
%      the existing singleton*.
%
%      OPTICKA_UI_EXPORT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in OPTICKA_UI_EXPORT.M with the given input arguments.
%
%      OPTICKA_UI_EXPORT('Property','Value',...) creates a new OPTICKA_UI_EXPORT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before opticka_ui_export_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to opticka_ui_export_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help opticka_ui

% Last Modified by GUIDE v2.5 25-Feb-2015 20:32:16

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
	'gui_Singleton',  gui_Singleton, ...
	'gui_OpeningFcn', @opticka_ui_OpeningFcn, ...
	'gui_OutputFcn',  @opticka_ui_OutputFcn, ...
	'gui_LayoutFcn',  @opticka_ui_LayoutFcn, ...
	'gui_Callback',   []);
if nargin && ischar(varargin{1})
	gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
	[varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
	gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before opticka_ui is made visible.
function opticka_ui_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to opticka_ui (see VARARGIN)

% Choose default command line output for opticka_ui
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes opticka_ui wait for user response (see UIRESUME)
% uiwait(handles.OKRoot);


% --- Outputs from this function are returned to the command line.
function varargout = opticka_ui_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;

% --------------------------------------------------------------------
function OKMenuFile_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuFile (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OKMenuEdit_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuEdit (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OKMenuTools_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuTools (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OKMenuStimulusLog_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuStimulusLog (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r.task.showLog;
end

% --------------------------------------------------------------------
function OKMenuShowGammaPlots_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuShowGammaPlots (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.r.screen.gammaTable,'calibrateLuminance')
		o.r.screen.gammaTable.plot;
	end
end
% --------------------------------------------------------------------
function OKMenuLogs_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuLogs (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OKMenuCheckIO_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuCheckIO (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	
end

% --------------------------------------------------------------------
function OKMenuEditConfiguration_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuEditConfiguration (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OKMenuAllTimingLogs_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuAllTimingLogs (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r.getRunLog;
end

% --------------------------------------------------------------------
function OKMenuMissedFrames_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuMissedFrames (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OKMenuCut_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuCut (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OKMenuCopy_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuCopy (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OKMenuPaste_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuPaste (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% --- Executes on selection change in OKSelectScreen.
function OKSelectScreen_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end


function OKMonitorDistance_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end


function OKpixelsPerCm_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end


function OKscreenXOffset_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

function OKscreenYOffset_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

function OKWindowSize_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

function OKGLSrc_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end


function OKGLDst_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

function OKbitDepth_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

function OKAntiAliasing_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

function OKUseGamma_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

function OKSerialPortName_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

% --- Executes on button press in OKUsePhotoDiode.
function OKUsePhotoDiode_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

% --- Executes on button press in OKuseDataPixx.
function OKuseDataPixx_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if get(hObject,'Value') == 1 && get(handles.OKuseDataPixx,'Value') == 1
		set(handles.OKuseLabJack,'Value', 0)
	end
	o.getScreenVals;
end

% --- Executes on button press in OKuseLabJack.
function OKuseLabJack_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if get(hObject,'Value') == 1 && get(handles.OKuseDataPixx,'Value') == 1
		set(handles.OKuseDataPixx,'Value', 0)
	end
	o.getScreenVals;
end

% --- Executes on button press in OKuseEyeLink.
function OKuseEyeLink_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end


% --- Executes on button press in OKVerbose.
function OKVerbose_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

% --- Executes on button press in OKlogFrames.
function OKlogFrames_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.r.screen,'screenManager')
		if get(hObject,'Value') == 1
			set(handles.OKbenchmark,'Value',0)
		end
		o.getScreenVals;
	end
end

% --- Executes on button press in OKOpenGLBlending.
function OKOpenGLBlending_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

% --- Executes on button press in OKHideFlash.
function OKHideFlash_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

% --- Executes on button press in OKDebug.
function OKDebug_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

function OKbackgroundColour_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

function OKNativeBeamPosition_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

function OKrecordMovie_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getScreenVals;
end

function OKnBlocks_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getTaskVals;
end

function OKisTime_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getTaskVals;
end

function OKtrialTime_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getTaskVals;
end

function OKrealTime_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getTaskVals;
end

% --------------------------------------------------------------------
function OKMenuNoiseTexture_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuNoiseTexture (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.store.visibleStimulus='dots';
	
end

% --------------------------------------------------------------------
function OKMenuLineTexture_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuLineTexture (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% --------------------------------------------------------------------
function OKMenuTargetInducer_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuSpot (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	
	if isfield(o.store,'visibleStimulus');
		o.store.visibleStimulus.closePanel();
		o.store = rmfield(o.store,'visibleStimulus');
	end
	
	set(handles.OKPanelStimulusText,'String','Loading Stimulus Panel...'); drawnow
	if o.r.stimuli.n == 0;handles.OKStimList.String='Once you''ve edited this stimulus, click [add]';end
	
	if ~isfield(o.store,'targetInducerStimulus')
		o.store.targetInducerStimulus=targetInducerStimulus('name','Target-Inducer Stimulus');
	end
	o.store.visibleStimulus = o.store.targetInducerStimulus;
	o.store.visibleStimulus.makePanel(handles.OKPanelStimulus);
	set(handles.OKAddStimulus,'Enable','on');
	set(handles.OKPanelStimulusText,'String','')
end

% --------------------------------------------------------------------
function OKMenuDots_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuSpot (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	
	if isfield(o.store,'visibleStimulus');
		o.store.visibleStimulus.closePanel();
		o.store = rmfield(o.store,'visibleStimulus');
	end
	
	set(handles.OKPanelStimulusText,'String','Loading Stimulus Panel...'); drawnow
	if o.r.stimuli.n == 0;handles.OKStimList.String='Once you''ve edited this stimulus, click [add]';end
	
	if ~isfield(o.store,'dotsStimulus')
		o.store.dotsStimulus=dotsStimulus('name', 'Coherent Dots Stimulus',...
			'speed', 2, 'colour', [1 1 1]);
	end
	o.store.dotsStimulus.speed = 2;
	o.store.visibleStimulus = o.store.dotsStimulus;
	o.store.visibleStimulus.makePanel(handles.OKPanelStimulus);
	set(handles.OKAddStimulus,'Enable','on');
	set(handles.OKPanelStimulusText,'String','')
end

% --------------------------------------------------------------------
function OKMenuNDots_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuNDots (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	
	if isfield(o.store,'visibleStimulus');
		o.store.visibleStimulus.closePanel();
		o.store = rmfield(o.store,'visibleStimulus');
	end
	
	set(handles.OKPanelStimulusText,'String','Loading Stimulus Panel...'); drawnow
	if o.r.stimuli.n == 0;handles.OKStimList.String='Once you''ve edited this stimulus, click [add]';end
	
	if ~isfield(o.store,'ndotsStimulus')
		o.store.ndotsStimulus=ndotsStimulus('name','Newsome Dots Stimulus',...
			'speed', 2, 'colour', [1 1 1]);
	end
	o.store.ndotsStimulus.speed = 2;
	o.store.visibleStimulus = o.store.ndotsStimulus;
	o.store.visibleStimulus.makePanel(handles.OKPanelStimulus);
	set(handles.OKAddStimulus,'Enable','on');
	set(handles.OKPanelStimulusText,'String','')
end

% --------------------------------------------------------------------
function OKMenuBar_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuBar (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	
	if isfield(o.store,'visibleStimulus');
		o.store.visibleStimulus.closePanel();
		o.store = rmfield(o.store,'visibleStimulus');
	end
	
	set(handles.OKPanelStimulusText,'String','Loading Stimulus Panel...'); drawnow
	if o.r.stimuli.n == 0;handles.OKStimList.String='Once you''ve edited this stimulus, click [add]';end
	
	if ~isfield(o.store,'barStimulus')
		o.store.barStimulus=barStimulus('name','Bar Stimulus');
	end
	o.store.visibleStimulus = o.store.barStimulus;
	o.store.visibleStimulus.makePanel(handles.OKPanelStimulus);
	set(handles.OKAddStimulus,'Enable','on');
	set(handles.OKPanelStimulusText,'String','')
end

% --------------------------------------------------------------------
function OKMenuGrating_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuGrating (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	
	if isfield(o.store,'visibleStimulus');
		o.store.visibleStimulus.closePanel();
		o.store = rmfield(o.store,'visibleStimulus');
	end
	
	set(handles.OKPanelStimulusText,'String','Loading Stimulus Panel...'); drawnow
	if o.r.stimuli.n == 0;handles.OKStimList.String='Once you''ve edited this stimulus, click [add]';end
	
	if ~isfield(o.store,'gratingStimulus')
		o.store.gratingStimulus=gratingStimulus('name','Grating Stimulus');
	end
	o.store.visibleStimulus = o.store.gratingStimulus;
	o.store.visibleStimulus.makePanel(handles.OKPanelStimulus);
	set(handles.OKAddStimulus,'Enable','on');
	set(handles.OKPanelStimulusText,'String','')
end

% --------------------------------------------------------------------
function OKMenuGabor_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuGabor (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	
	if isfield(o.store,'visibleStimulus');
		o.store.visibleStimulus.closePanel();
		o.store = rmfield(o.store,'visibleStimulus');
	end
	
	set(handles.OKPanelStimulusText,'String','Loading Stimulus Panel...'); drawnow
	if o.r.stimuli.n == 0;handles.OKStimList.String='Once you''ve edited this stimulus, click [add]';end
	
	if ~isfield(o.store,'gaborStimulus')
		o.store.gaborStimulus=gaborStimulus('name','Gabor Stimulus');
	end
	o.store.visibleStimulus = o.store.gaborStimulus;
	set(handles.OKPanelStimulusText,'String','')
	o.store.visibleStimulus.makePanel(handles.OKPanelStimulus);
	set(handles.OKAddStimulus,'Enable','on');
end

% --------------------------------------------------------------------
function OKMenuSpot_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuSpot (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	
	o = getappdata(handles.output,'o');
	
	if isfield(o.store,'visibleStimulus');
		o.store.visibleStimulus.closePanel();
		o.store = rmfield(o.store,'visibleStimulus');
	end
	
	set(handles.OKPanelStimulusText,'String','Loading Stimulus Panel...'); drawnow
	if o.r.stimuli.n == 0;handles.OKStimList.String='Once you''ve edited this stimulus, click [add]';end
	
	if ~isfield(o.store,'spotStimulus')
		o.store.spotStimulus=spotStimulus('name','Spot Stimulus');
	end
	o.store.visibleStimulus = o.store.spotStimulus;
	set(handles.OKPanelStimulusText,'String','')
	o.store.visibleStimulus.makePanel(handles.OKPanelStimulus);
	set(handles.OKAddStimulus,'Enable','on');
end

% --------------------------------------------------------------------
function OKMenuTexture_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuTexture (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	
	if isfield(o.store,'visibleStimulus');
		o.store.visibleStimulus.closePanel();
		o.store = rmfield(o.store,'visibleStimulus');
	end
	
	set(handles.OKPanelStimulusText,'String','Loading Stimulus Panel...'); drawnow
	if o.r.stimuli.n == 0;handles.OKStimList.String='Once you''ve edited this stimulus, click [add]';end
	
	if ~isfield(o.store,'textureStimulus')
		o.store.textureStimulus=textureStimulus('name','Picture / Texture Stimulus');
	end
	o.store.visibleStimulus = o.store.textureStimulus;
	o.store.visibleStimulus.makePanel(handles.OKPanelStimulus);
	set(handles.OKAddStimulus,'Enable','on');
	set(handles.OKPanelStimulusText,'String','')
end


% --------------------------------------------------------------------
function OKMenuPreferences_Callback(hObject, eventdata, handles)


function OKProtocolsList_Callback(hObject, eventdata, handles)


function OKHistoryList_Callback(hObject, eventdata, handles)


% --- Executes on button press in OKProtocolLoad.
function OKProtocolLoad_Callback(hObject, eventdata, handles)
% hObject    handle to OKProtocolLoad (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.router('loadProtocol');
end

% --- Executes on button press in OKProtocolSave.
function OKProtocolSave_Callback(hObject, eventdata, handles)
% hObject    handle to OKProtocolSave (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.router('saveProtocol');
end

% --- Executes on button press in OKProtocolDuplicate.
function OKProtocolDuplicate_Callback(hObject, eventdata, handles)
% hObject    handle to OKProtocolDuplicate (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.router('duplicateProtocol');
end

% --- Executes on button press in OKProtocolDelete.
function OKProtocolDelete_Callback(hObject, eventdata, handles)
% hObject    handle to OKProtocolDelete (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.router('deleteProtocol');
end

% --------------------------------------------------------------------
function OKMenuCalibrateLuminance_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuCalibrateLuminance (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	v=get(handles.OKSelectScreen,'Value');
	inp = struct('screen',v-1);
	if isa(o.r.screen.gammaTable,'calibrateLuminance')
		o.r.screen.gammaTable.run;
	else
		c = calibrateLuminance(inp);
		o.r.screen.gammaTable = c;
		c.filename = [o.paths.calibration filesep 'Cal-' date '-' c.comments];
		o.saveCalibration;
	end
	set(handles.OKUseGamma,'Value',1)
	o.r.screen.gammaTable.choice = 0; 
	set(handles.OKUseGamma,'String',['None'; 'Gamma'; o.r.screen.gammaTable.analysisMethods]);
end

% --------------------------------------------------------------------
function OKMenuLoadGamma_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuLoadGamma (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	uiopen('~/MatlabFiles/Calibration')
	if exist('tmp','var') && isa(tmp,'calibrateLuminance')
		o.r.screen.gammaTable = tmp;
		clear tmp;
		if get(handles.OKUseGamma,'Value') > length(['None'; 'Gamma'; o.r.screen.gammaTable.analysisMethods])
			set(handles.OKUseGamma,'Value',1);
			o.r.screen.gammaTable.choice = 0; 
		else
			o.r.screen.gammaTable.choice = get(handles.OKUseGamma,'Value')-1;
		end
		set(handles.OKUseGamma,'String',['None'; 'Gamma'; o.r.screen.gammaTable.analysisMethods]);
	end
end

% --------------------------------------------------------------------
function OKMenuSaveGamma_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuSaveGamma (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.r.screen.gammaTable,'calibrateLuminance')
		tmp=o.r.screen.gammaTable;
		uisave('tmp',[o.paths.calibration filesep 'Calibration-' date '-' o.r.screen.gammaTable.comments]);
	end
end

% --------------------------------------------------------------------
function OKMenuCalibrateSize_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuCalibrateSize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
v=get(handles.OKSelectScreen,'Value');
s=str2num(get(handles.OKMonitorDistance,'String')); 
[~,dpc]=calibrateSize(v-1,s);
set(handles.OKpixelsPerCm,'String',num2str(dpc));


function OKitTime_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getTaskVals;
end

function OKRandomise_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getTaskVals;
end
% --- Executes on selection change in OKrandomGenerator.
function OKrandomGenerator_Callback(hObject, eventdata, handles)
% hObject    handle to OKrandomGenerator (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% Hints: contents = cellstr(get(hObject,'String')) returns OKrandomGenerator contents as cell array
%        contents{get(hObject,'Value')} returns selected item from OKrandomGenerator
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getTaskVals;
end

function OKRandomSeed_Callback(hObject, eventdata, handles)
% hObject    handle to OKRandomSeed (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% Hints: get(hObject,'String') returns contents of OKRandomSeed as text
%        str2double(get(hObject,'String')) returns contents of OKRandomSeed as a double
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getTaskVals;
end

% --- Executes on button press in OKHistoryUp.
function OKHistoryUp_Callback(hObject, eventdata, handles)
% hObject    handle to OKHistoryUp (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in OKHistoryDown.
function OKHistoryDown_Callback(hObject, eventdata, handles)
% hObject    handle to OKHistoryDown (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in OKHistoryDelete.
function OKHistoryDelete_Callback(hObject, eventdata, handles)
% hObject    handle to OKHistoryDelete (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on selection change in OKVariableList.
function OKVariableList_Callback(hObject, eventdata, handles)
% hObject    handle to OKVariableList (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns OKVariableList contents as cell array
%        contents{get(hObject,'Value')} returns selected item from OKVariableList

% --- Executes on button press in OKCopyVariableName.
function OKCopyVariableName_Callback(hObject, eventdata, handles)
% hObject    handle to OKCopyVariableName (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
string = get(handles.OKVariableList,'String');
value = get(handles.OKVariableList,'Value');
string=string{value};
set(handles.OKVariableName,'String',string);

function OKCopyVariableNameValues_Callback(hObject, eventdata, handles)
string = get(handles.OKVariableList,'String');
value = get(handles.OKVariableList,'Value');
string=string{value};
set(handles.OKVariableName,'String',string);

switch string
	case 'angle'
		string = num2str(-90:45:90);
		string = regexprep(string,'\s+',' '); %collapse spaces
		set(handles.OKVariableValues,'String',string);
	case 'motionAngle'
		string = num2str(-90:45:90);
		string = regexprep(string,'\s+',' '); %collapse spaces
		set(handles.OKVariableValues,'String',string);
	case 'phase'
		string = num2str(0:22.5:180);
		string = regexprep(string,'\s+',' '); %collapse spaces
		set(handles.OKVariableValues,'String',string);
	case 'size'
		string = num2str([0 0.1 0.2 0.35 0.5 0.75 1 2 4 6 8]);
		string = regexprep(string,'\s+',' '); %collapse spaces
		set(handles.OKVariableValues,'String',string);
	case 'contrast'
		string = num2str(0:0.1:1);
		string = regexprep(string,'\s+',' '); %collapse spaces
		set(handles.OKVariableValues,'String',string);
	case 'sf'
		string = num2str([0 0.1 0.5 0.7 1 1.5 2 3 4 5 6]);
		string = regexprep(string,'\s+',' '); %collapse spaces
		set(handles.OKVariableValues,'String',string);
	case 'tf'
		string = num2str([0.5 1 2 3 4 5]);
		string = regexprep(string,'\s+',' '); %collapse spaces
		set(handles.OKVariableValues,'String',string);
	case 'xPosition'
		string = num2str(-1:0.2:1);
		string = regexprep(string,'\s+',' '); %collapse spaces
		set(handles.OKVariableValues,'String',string);	
	case 'yPosition'
		string = num2str(-1:0.2:1);
		string = regexprep(string,'\s+',' '); %collapse spaces
		set(handles.OKVariableValues,'String',string);	
end



% --- Executes on button press in OKVariablesLinear.
function OKVariablesLinear_Callback(hObject, eventdata, handles)
values = str2num(get(handles.OKVariableValues,'String'));
if length(values) == 3
	values=linspace(values(1),values(2),values(3));
	string = num2str(values);
else
	string = num2str(values);
	string = regexprep(string,'\s+',' '); %collapse spaces
end
set(handles.OKVariableValues,'String',string);

% --- Executes on button press in OKVariablesLog.
function OKVariablesLog_Callback(hObject, eventdata, handles) %#ok<*INUSD>
values = str2num(get(handles.OKVariableValues,'String'));
if length(values) == 3
	values=logspace(log10(values(1)),log10(values(2)),values(3));
	string = num2str(values);
	string = regexprep(string,'\s+',' '); %collapse spaces
	set(handles.OKVariableValues,'String',string);
else
	warndlg('Please enter a minimum, maximum and number of values');
end

% --- Executes on button press in OKAddStimulus.
function OKAddStimulus_Callback(hObject, eventdata, handles)
% hObject    handle to OKAddStimulus (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isfield(o.store,'visibleStimulus')
		o.store.visibleStimulus.readPanel();
		o.r.stimuli{o.r.stimuli.n+1} = o.store.visibleStimulus.clone();
		%o.r.stimuli{o.r.stimuli.n}.name = 'Stimulus';
		o.addStimulus;
		if o.r.stimuli.n > 0
			set(handles.OKAddStimulus,'Enable','on');
			set(handles.OKDeleteStimulus,'Enable','on');
			set(handles.OKModifyStimulus,'Enable','on');
			set(handles.OKCopyStimulus,'Enable','on');
			set(handles.OKStimulusUp,'Enable','on');
			set(handles.OKStimulusDown,'Enable','on');
			set(handles.OKStimulusRun,'Enable','on');
			set(handles.OKStimulusRunBenchmark,'Enable','on');
			set(handles.OKStimulusRunAll,'Enable','on');
			set(handles.OKStimulusRunAllBenchmark,'Enable','on');
			set(handles.OKStimulusRunSingle,'Enable','on');
		end
	end
end

% --- Executes on button press in OKDeleteStimulus.
function OKDeleteStimulus_Callback(hObject, eventdata, handles)
% hObject    handle to OKDeleteStimulus (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.deleteStimulus;
	if o.r.stimuli.n == 0
		set(handles.OKAddStimulus,'Enable','off');
		set(handles.OKDeleteStimulus,'Enable','off');
		set(handles.OKModifyStimulus,'Enable','off');
		set(handles.OKCopyStimulus,'Enable','off');
		set(handles.OKStimulusUp,'Enable','off');
		set(handles.OKStimulusDown,'Enable','off');
		set(handles.OKStimulusRun,'Enable','off');
		set(handles.OKStimulusRunBenchmark,'Enable','off');
		set(handles.OKStimulusRunAll,'Enable','off');
		set(handles.OKStimulusRunAllBenchmark,'Enable','off');
		set(handles.OKStimulusRunSingle,'Enable','off');
	end
end

% --- Executes on button press in OKCopyStimulus.
function OKCopyStimulus_Callback(hObject, eventdata, handles)
% hObject    handle to OKCopyStimulus (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	v = get(handles.OKStimList,'Value');
	o.r.stimuli{o.r.stimuli.n+1} = o.r.stimuli{v}.clone;
	o.r.stimuli{o.r.stimuli.n}.name = ['Stimulus #' num2str(o.r.stimuli.n)];
	o.addStimulus;
end

% --- Executes on selection change in OKStimList.
function OKStimList_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.editStimulus;
end

% --- Executes on button press in OKStimulusDown.
function OKStimulusDown_Callback(hObject, eventdata, handles) %#ok<*INUSL>
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	value = get(handles.OKStimList,'Value'); %where are we in the stimulus list
	slength = o.r.stimuli.n;
	if value < slength
		idx = 1:slength;
		idx2 = idx;
		idx2(value) = idx2(value)+1;
		idx2(value+1) = idx2(value+1)-1;
		o.r.stimuli(idx) = o.r.stimuli(idx2);
		set(handles.OKStimList,'Value',value+1);
		o.modifyStimulus;
	end
end

% --- Executes on button press in OKStimulusUp.
function OKStimulusUp_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	value = get(handles.OKStimList,'Value'); %where are we in the stimulus list
	slength = o.r.stimuli.n;
	if value > 1
		idx = 1:slength;
		idx2 = idx;
		idx2(value) = idx2(value)-1;
		idx2(value-1) = idx2(value-1)+1;
		o.r.stimuli(idx) = o.r.stimuli(idx2);
		set(handles.OKStimList,'Value',value-1);
		o.modifyStimulus;
	end
end

% --- Executes on button press in OKStimulusRun.
function OKStimulusRun_Callback(hObject, eventdata, handles)
% hObject    handle to OKStimulusRun (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	v = get(handles.OKStimList,'Value');
	if v > 0 && isobject(o.r.stimuli{v})
		run(o.r.stimuli{v}, false, [], o.r.screen);
	end
	set(handles.OKStimulusRunAll,'Enable','on');
end

% --- Executes on button press in OKStimulusRunBenchmark.
function OKStimulusRunBenchmark_Callback(hObject, eventdata, handles)
% hObject    handle to OKStimulusRunBenchmark (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	v = get(handles.OKStimList,'Value');
	if v > 0 && isa(o.r.stimuli{v},'baseStimulus')
		run(o.r.stimuli{v}, true, [], o.r.screen);
	end
end

% --- Executes on button press in OKStimulusRunAll.
function OKStimulusRunAll_Callback(hObject, eventdata, handles)
% hObject    handle to OKStimulusRunAll (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.r.stimuli,'metaStimulus') && o.r.stimuli.n > 0
		o.r.stimuli.choice = [];
		if isa(o.r.screen,'screenManager')
			run(o.r.stimuli, [], [], o.r.screen);
		else
			run(o.r.stimuli);
		end
	end
end

% --- Executes on button press in OKStimulusRunAllBenchmark.
function OKStimulusRunAllBenchmark_Callback(hObject, eventdata, handles)
% hObject    handle to OKStimulusRunAllBenchmark (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.r.stimuli,'metaStimulus') && o.r.stimuli.n > 0
		o.r.stimuli.choice = [];
		if isa(o.r.screen,'screenManager')
			run(o.r.stimuli, true, 5, o.r.screen);
		else
			run(o.r.stimuli, true);
		end
	end
end

% --- Executes on button press in OKStimulusRunSingle.
function OKStimulusRunSingle_Callback(hObject, eventdata, handles)
% hObject    handle to OKStimulusRunSingle (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.r.stimuli,'metaStimulus') && o.r.stimuli.n > 0
		o.r.stimuli.choice = [];
		runSingle(o.r.stimuli, o.r.screen);
	end
end


% --- Executes on button press in OKInspectStimulus.
function OKInspectStimulus_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	v = get(handles.OKStimList,'Value');
	if v > 0;
		uiinspect(o.r.stimuli{v});
	end
end

% --- Executes on button press in OKInspectVariable.
function OKInspectVariable_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	v = get(handles.OKVarList,'Value');
	if v > 0;
		uiinspect(o.r.task.nVar(v));
	end
end


% --- Executes on button press in OKModifyStimulus.
function OKModifyStimulus_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	v = get(handles.OKStimList,'Value');
	if v > 0;
		seditor(o.r.stimuli{v}, handles.output);
	end
	
end

% --- Executes on button press in OKAddVariable.
function OKAddVariable_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.addVariable;
	if o.r.task.nVars > 0
		set(handles.OKDeleteVariable,'Enable','on');
		set(handles.OKCopyVariable,'Enable','on');
		set(handles.OKEditVariable,'Enable','on');
	end
end

% --- Executes on button press in OKDeleteVariable.
function OKDeleteVariable_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.deleteVariable;
	if o.r.task.nVars < 1
		set(handles.OKDeleteVariable,'Enable','off');
		set(handles.OKCopyVariable,'Enable','off');
		set(handles.OKEditVariable,'Enable','off');
	end
end

function OKCopyVariable_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.copyVariable;
end

function OKEditVariable_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.editVariable;
end

function OKVariableOffset_Callback(hObject, eventdata, handles)
% hObject    handle to OKVariableOffset (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of OKVariableOffset as text
%        str2double(get(hObject,'String')) returns contents of OKVariableOffset
%        as a double

% --------------------------------------------------------------------
function OKToolbarRun_ClickedCallback(hObject, eventdata, handles)
% hObject    handle to OKToolbarRun (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if ~isempty(o.oc) && o.oc.isOpen == 1 && o.r.useLabJack == 1
		o.oc.write('--GO!--');
		pause(0.5);
	end
	drawnow;
	o.r.uiCommand='run';
	o.r.run;
end

% --------------------------------------------------------------------
function OKToolbarStop_ClickedCallback(hObject, eventdata, handles)
% hObject    handle to OKToolbarStop (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r.uiCommand='stop';
	drawnow;
end

% --------------------------------------------------------------------
function OKToolbarAbort_ClickedCallback(hObject, eventdata, handles)
% hObject    handle to OKToolbarAbort (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r.uiCommand='abort';
	if isa(o.oc,'dataConnection')
		o.oc.write('--abort--');
	end
	drawnow;
end

function OKRemoteIP_Callback(hObject, eventdata, handles)
% hObject    handle to OKRemoteIP (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of OKRemoteIP as text
%        str2double(get(hObject,'String')) returns contents of OKRemoteIP as a double
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getTaskVals;
end


function OKRemotePort_Callback(hObject, eventdata, handles)
% hObject    handle to OKRemotePort (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of OKRemotePort as text
%        str2double(get(hObject,'String')) returns contents of OKRemotePort as a double
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getTaskVals;
end

% --------------------------------------------------------------------
function OKToolbarToggleRemote_OnCallback(hObject, eventdata, handles)
% hObject    handle to OKToolbarToggleRemote (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	eval(o.store.serverCommand)
end


% --------------------------------------------------------------------
function OKMenumanageCode_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenumanageCode (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
manageCode


% --------------------------------------------------------------------
function OKMenurfMapperLog_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenurfMapperLog (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


function OKSettingsmovieSize_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r.screen.movieSettings.size=str2num(get(hObject,'String'));
end

function OKSettingsmovieFrames_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r.screen.movieSettings.nFrames=str2num(get(hObject,'String')); %#ok<*ST2NM>
end

function OKSettingsmoviePrecision_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r.screen.movieSettings.quality=get(hObject,'Value');
end

function OKSettingsmovieType_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r.screen.movieSettings.type=get(hObject,'Value');
end

function OKSettingsmovieCodec_Callback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r.screen.movieSettings.codec=get(hObject,'String');
end

% --------------------------------------------------------------------
function OKPanelTellOmniplex_ClickedCallback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	resp = questdlg('Is opxOnline running on the Omniplex machine?','Check OPX','No');
	if strcmpi(resp,'Yes')
		o.connectToOmniplex
	end
end

% --------------------------------------------------------------------
function OKPanelReconnectOmniplex_ClickedCallback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.oc,'dataConnection')
		o.oc.closeAll;
		o.connectToOmniplex;
	end
end

% --------------------------------------------------------------------
function OKPanelSendOmniplex_ClickedCallback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.oc,'dataConnection')
		o.sendOmniplexStimulus;
	end
end

% --------------------------------------------------------------------
function OKPanelDisconnectOmniplex_ClickedCallback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.oc,'dataConnection')
		o.disconnectOmniplex;
	end
end

% --------------------------------------------------------------------
function OKPanelPingOmniplex_ClickedCallback(hObject, eventdata, handles)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	rAddress = get(handles.OKOmniplexIP,'String');
	status = o.ping(rAddress);
	if status > 0
		set(o.h.OKOmniplexStatus,'String','Omniplex: machine ping ERROR!')
	else
		if isa(o.oc,'dataConnection') && o.oc.isOpen == 1
			o.oc.write('--ping--');
			loop = 1;
			while loop < 8
				in = o.oc.read(0);
				fprintf('\n{opticka said: %s}\n',in)
				if regexpi(in,'ping')
					fprintf('\nWe can ping omniplex master on try: %d\n',loop)
					set(handles.OKOmniplexStatus,'String','Omniplex: connected and pinged')
					break
				else
					fprintf('\nOmniplex master not responding, try: %d\n',loop)
					set(handles.OKOmniplexStatus,'String','Omniplex: not responding')
				end
				loop=loop+1;
				pause(0.1);
			end
		end
	end
end


function OKverbosityLevel_Callback(hObject, eventdata, handles)
% hObject    handle to OKverbosityLevel (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of OKverbosityLevel as text
%        str2double(get(hObject,'String')) returns contents of OKverbosityLevel as a double
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.r.screen,'screenManager')
		o.r.screen.verbosityLevel = str2double(get(hObject,'String'));
	end
end


% --- Executes on button press in OKbenchmark.
function OKbenchmark_Callback(hObject, eventdata, handles)
% hObject    handle to OKbenchmark (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% Hint: get(hObject,'Value') returns toggle state of OKbenchmark
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.r.screen,'screenManager')
		if get(hObject,'Value') == 1
			set(handles.OKlogFrames,'Value',0)
		end
		o.getScreenVals;
	end
end

% --- Executes on button press in OKOmniplexEnable.
function OKOmniplexEnable_Callback(hObject, eventdata, handles)
% hObject    handle to OKOmniplexEnable (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% Hint: get(hObject,'Value') returns toggle state of OKOmniplexEnable
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if get(hObject,'Value') < 1
		set(handles.OKOmniplexIP,'Enable','off');
		set(handles.OKOmniplexPort,'Enable','off');
		set(handles.OKToolbarTellOmniplex,'Enable','off');
		set(handles.OKPanelReconnectOmniplex,'Enable','off');
		set(handles.OKPanelSendOmniplex,'Enable','off');
		set(handles.OKPanelPingOmniplex,'Enable','off');
		set(handles.OKPanelDisconnectOmniplex,'Enable','off');
	else
		set(handles.OKOmniplexIP,'Enable','on');
		set(handles.OKOmniplexPort,'Enable','on');
		set(handles.OKToolbarTellOmniplex,'Enable','on');
		set(handles.OKPanelReconnectOmniplex,'Enable','on');
		set(handles.OKPanelSendOmniplex,'Enable','on');
		set(handles.OKPanelPingOmniplex,'Enable','on');
		set(handles.OKPanelDisconnectOmniplex,'Enable','on');
	end
end

% --------------------------------------------------------------------
function OKMenuOpen_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuOpen (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.router('loadProtocol',false);
end

% --------------------------------------------------------------------
function OKMenuSave_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuSave (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.router('saveProtocol');
end

% --------------------------------------------------------------------
function OKMenuQuit_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuQuit (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	try
		o = getappdata(handles.output,'o');
		o.savePrefs;
		rmappdata(handles.output,'o');
		clear o;
	catch ME
		fprintf('>>> Opticka failed to clear all data on close...');
		rethrow ME
	end
end
close(gcf);

% --------------------------------------------------------------------
function OKMenuNewProtocol_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuNewProtocol (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r = [];
	o.store.evnt = [];
	o.store = rmfield(o.store,'evnt');
	o.store.visibleStimulus=[];
	o.store = rmfield(o.store,'visibleStimulus');
	o.clearStimulusList;
	o.clearVariableList;
	o.getScreenVals;
	o.getTaskVals;
end

% --------------------------------------------------------------------
function OKToolbarInitialise_ClickedCallback(hObject, eventdata, handles) %#ok<*DEFNU>
% hObject    handle to OKToolbarInitialise (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r = [];
	o.store.evnt = [];
	o.store = rmfield(o.store,'evnt');
	o.store.visibleStimulus=[];
	o.store = rmfield(o.store,'visibleStimulus');
	o.clearStimulusList;
	o.clearVariableList;
	o.getScreenVals;
	o.getTaskVals;
end

% --------------------------------------------------------------------
function OKToolbarOpen_ClickedCallback(hObject, eventdata, handles)
% hObject    handle to OKToolbarOpen (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.router('loadProtocol','1');
end

% --------------------------------------------------------------------
function OKToolbarSave_ClickedCallback(hObject, eventdata, handles)
% hObject    handle to OKToolbarSave (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.router('saveProtocol');
end


% --------------------------------------------------------------------
function OKToolbarDefinePath_ClickedCallback(hObject, eventdata, handles)
% hObject    handle to OKToolbarDefinePath (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	path = uigetdir;
	if ischar(path) && exist(path,'dir')
		initialiseSave(o, path);
		if isa(o.r,'runExperiment');
			initialiseSave(o.r, path);
		end
	end
end


function OKTrainingName_Callback(hObject, eventdata, handles)
% hObject    handle to OKTrainingName (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of OKTrainingName as text
%        str2double(get(hObject,'String')) returns contents of OKTrainingName as a double
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r.subjectName = hObject.String;
end

% --- Executes during object creation, after setting all properties.
function OKTrainingName_CreateFcn(hObject, eventdata, handles)
% hObject    handle to OKTrainingName (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --------------------------------------------------------------------
function OKToggleUI_ClickedCallback(hObject, eventdata, handles)
% hObject    handle to OKToggleUI (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if strcmp(get(handles.OKPanelGlobal,'Visible'),'on')
	
	set(handles.OKPanelGlobal,'Visible','off');
	set(handles.OKPanelProtocols,'Visible','on');
	set(handles.OKPanelTraining,'Visible','off');
	
elseif strcmp(get(handles.OKPanelProtocols,'Visible'),'on')
	
	set(handles.OKPanelProtocols,'Visible','off')
	set(handles.OKPanelGlobal,'Visible','off')
	set(handles.OKPanelTraining,'Visible','on')
	if isappdata(handles.output,'o')
		o = getappdata(handles.output,'o');
		o.getStateInfo();
	end
	
else
	
	set(handles.OKPanelProtocols,'Visible','off')
	set(handles.OKPanelGlobal,'Visible','on')
	set(handles.OKPanelTraining,'Visible','off')
	
end

% --- Executes on button press in OKEditStateFileButon.
function OKEditStateFileButon_Callback(hObject, eventdata, handles)
% hObject    handle to OKEditStateFileButon (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if exist(o.r.paths.stateInfoFile,'file')
		edit(o.r.paths.stateInfoFile);
	end
	o.getStateInfo();
end

function OKTrainingResearcherName_Callback(hObject, eventdata, handles)
% hObject    handle to OKTrainingResearcherName (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of OKTrainingResearcherName as text
%        str2double(get(hObject,'String')) returns contents of OKTrainingResearcherName as a double
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.r.researcherName = hObject.String;
end
% --------------------------------------------------------------------
function OKMenuStateInfo_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuStateInfo (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.router('LoadStateInfo');
	o.getStateInfo();
end

% --- Executes on button press in OKLoadStateButton.
function OKLoadStateButton_Callback(hObject, eventdata, handles)
% hObject    handle to OKLoadStateButton (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.router('LoadStateInfo');
	o.getStateInfo();
end

% --- Executes on button press in OKRefreshStateInfo.
function OKRefreshStateInfo_Callback(hObject, eventdata, handles)
% hObject    handle to OKRefreshStateInfo (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.getStateInfo();
end

% --------------------------------------------------------------------
function OKRFMapper_ClickedCallback(hObject, eventdata, handles)
% hObject    handle to OKRFMapper (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.store.rfLog = [];
	rf=rfMapper;
	rf.run(o.r);
	o.store.rfLog = rf;
	clear rf;
end

% --------------------------------------------------------------------
function OKRunRFMapper_Callback(hObject, eventdata, handles)
% hObject    handle to OKRunRFMapper (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	o.store.rfLog = [];
	rf=rfMapper;
	rf.run(o.r);
	o.store.rfLog = rf;
	clear rf;
end

% --------------------------------------------------------------------
function OKRunTrainingSession_Callback(hObject, eventdata, handles)
% hObject    handle to OKRunTrainingSession (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OKRunExperiment_Callback(hObject, eventdata, handles)
% hObject    handle to OKRunExperiment (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% --------------------------------------------------------------------
function OKStartTask_ClickedCallback(hObject, eventdata, handles)
% hObject    handle to OKStartTask (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isappdata(handles.output,'o')
	o = getappdata(handles.output,'o');
	if isa(o.r,'runExperiment')
		%o.r.screenSettings.optickahandle = handles.output;
		initialiseSave(o.r, o.paths.savedData)
		if ~isempty(regexp(o.comment, '^Protocol','once'))
			o.r.comment = o.comment;
		end
		runTask(o.r);
	end
end


% --------------------------------------------------------------------
function OKMenuIO_Callback(hObject, eventdata, handles)
% hObject    handle to OKMenuIO (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Creates and returns a handle to the GUI figure. 
function h1 = opticka_ui_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end
load opticka_ui.mat

nfont = 'calibri';
mfont = 'menlo';
bcolour = [0.9 0.9 0.9];

appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h', [], ...
    'taginfo', struct(...
    'figure', 2, ...
    'text', 217, ...
    'uipanel', 54, ...
    'listbox', 6, ...
    'edit', 181, ...
    'pushbutton', 59, ...
    'popupmenu', 20, ...
    'radiobutton', 4, ...
    'checkbox', 44, ...
    'axes', 6, ...
    'togglebutton', 4, ...
    'uitoolbar', 2, ...
    'uitoggletool', 3, ...
    'uipushtool', 20), ...
    'override', 1, ...
    'release', 13, ...
    'resize', 'simple', ...
    'accessibility', 'callback', ...
    'mfile', 1, ...
    'callbacks', 1, ...
    'singleton', 1, ...
    'syscolorfig', 0, ...
    'blocking', 0, ...
    'lastFilename', '/Users/ian/Code/opticka/ui/opticka_ui.fig', ...
    'lastSavedFile', '/Users/ian/Documents/MATLAB/opticka_ui.m');
appdata.lastValidTag = 'OKRoot';
appdata.SavedVisible = 'on';
appdata.GUIDELayoutEditor = [];
appdata.initTags = struct(...
    'handle', [], ...
    'tag', 'OKRoot');

h1 = figure(...
'PaperUnits',get(0,'defaultfigurePaperUnits'),...
'Units',get(0,'defaultfigureUnits'),...
'Position',[200 200 1150 720],...
'Visible','on',...
'Color',bcolour,...
'IntegerHandle','off',...
'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
'DoubleBuffer','off',...
'MenuBar','none',...
'ToolBar','none',...
'Name','Opticka',...
'NumberTitle','off',...
'DockControls','off',...
'PaperPosition',[-4.30388888888889 -0.352777777777778 38.2763888888889 21.6958333333333],...
'PaperSize',[29.69999902 20.99999864],...
'PaperType',get(0,'defaultfigurePaperType'),...
'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
'PaperOrientation','landscape',...
'HandleVisibility','callback',...
'Tag','OKRoot',...
'UserData',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKPanelIndividual';
h146 = uibuttongroup(...
'Parent',h1,...
'FontUnits','pixels',...
'Units','normalized',...
'ForegroundColor',[0.313725490196078 0.313725490196078 0.313725490196078],...
'TitlePosition','righttop',...
'Title','Stimuli / Variables',...
'Position',[0 0 1 0.72],...
'BackgroundColor',bcolour,...
'Clipping','off',...
'Tag','OKPanelIndividual',...
'FontSize',12,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

if verLessThan('matlab','8.4');tp='top';else tp='left';end
tabgp = uitabgroup(h1,'Position',[0 0.72 1 0.28],'TabLocation',tp,'Tag','OKtabgp');
tab1 = uitab(tabgp,'Title','Display','Tag','OKtab1');
tab2 = uitab(tabgp,'Title','Behavioural Task','Tag','OKtab2');
tab3 = uitab(tabgp,'Title','Protocols','Tag','OKtab3');

appdata = [];
appdata.lastValidTag = 'OKMenuFile';
h2 = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuFile_Callback',hObject,eventdata,guidata(hObject)),...
'Label','File',...
'Tag','OKMenuFile',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuNewProtocol';

h3 = uimenu(...
'Parent',h2,...
'Accelerator','N',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuNewProtocol_Callback',hObject,eventdata,guidata(hObject)),...
'Label','New Protocol',...
'Tag','OKMenuNewProtocol',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuOpen';

h4 = uimenu(...
'Parent',h2,...
'Accelerator','O',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuOpen_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Open Protocol...',...
'Tag','OKMenuOpen',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuSave';

h5 = uimenu(...
'Parent',h2,...
'Accelerator','V',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuSave_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Save Protocol...',...
'Tag','OKMenuSave',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuStateInfo';

h6 = uimenu(...
'Parent',h2,...
'Separator','on',...
'Accelerator','I',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuStateInfo_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Open stateMachine info...',...
'Tag','OKMenuStateInfo',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuQuit';

h7 = uimenu(...
'Parent',h2,...
'Separator','on',...
'Accelerator','X',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuQuit_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Quit Opticka',...
'Tag','OKMenuQuit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuEdit';

h8 = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuEdit_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Edit',...
'Tag','OKMenuEdit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuCut';

h9 = uimenu(...
'Parent',h8,...
'Enable','off',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuCut_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Cut',...
'Tag','OKMenuCut',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuCopy';

h10 = uimenu(...
'Parent',h8,...
'Enable','off',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuCopy_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Copy',...
'Tag','OKMenuCopy',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuPaste';

h11 = uimenu(...
'Parent',h8,...
'Enable','off',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuPaste_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Paste',...
'Tag','OKMenuPaste',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuTools';

h12 = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuTools_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Stimulus',...
'Tag','OKMenuTools',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuGrating';

h13 = uimenu(...
'Parent',h12,...
'Accelerator','G',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuGrating_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Grating',...
'Tag','OKMenuGrating',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuGabor';

h14 = uimenu(...
'Parent',h12,...
'Accelerator','R',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuGabor_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Gabor',...
'Tag','OKMenuGabor',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuBar';

h15 = uimenu(...
'Parent',h12,...
'Accelerator','B',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuBar_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Bar',...
'Tag','OKMenuBar',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuDots';

h16 = uimenu(...
'Parent',h12,...
'Accelerator','D',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuDots_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Coherent Dots',...
'Tag','OKMenuDots',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuNDots';

h17 = uimenu(...
'Parent',h12,...
'Accelerator','Q',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuNDots_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Newsome Dots',...
'Tag','OKMenuNDots',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuSpot';

h18 = uimenu(...
'Parent',h12,...
'Accelerator','S',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuSpot_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Spot',...
'Tag','OKMenuSpot',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuTexture';

h19 = uimenu(...
'Parent',h12,...
'Accelerator','T',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuTexture_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Texture',...
'Tag','OKMenuTexture',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuTargetInducer';

h20 = uimenu(...
'Parent',h12,...
'Accelerator','T',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuTargetInducer_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Target Inducer',...
'Tag','OKMenuTargetInducer',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuPlaid';

h21 = uimenu(...
'Parent',h12,...
'Enable','off',...
'Separator','on',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuPlaid_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Plaid',...
'Tag','OKMenuPlaid',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuNoiseTexture';

h22 = uimenu(...
'Parent',h12,...
'Enable','off',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuNoiseTexture_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Noise Texture',...
'Tag','OKMenuNoiseTexture',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuLineTexture';

h23 = uimenu(...
'Parent',h12,...
'Enable','off',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuLineTexture_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Line Texture',...
'Tag','OKMenuLineTexture',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Untitled_17';

h24 = uimenu(...
'Parent',h12,...
'Enable','off',...
'Separator','on',...
'Callback',@(hObject,eventdata)opticka_ui('Untitled_17_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Reverse Correlation',...
'Tag','Untitled_17',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuRun';
h25a = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuTools_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Run',...
'Tag','OKMenuRun',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKRunTrainingSession';
h26 = uimenu(...
'Parent',h25a,...
'Accelerator','1',...
'Callback',@(hObject,eventdata)opticka_ui('OKRunTrainingSession_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Run Behavioural task',...
'Tag','OKRunTrainingSession',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKRunExperiment';
h27 = uimenu(...
'Parent',h25a,...
'Accelerator','2',...
'Callback',@(hObject,eventdata)opticka_ui('OKRunExperiment_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Run MOC Task',...
'Tag','OKRunExperiment',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKRunRFMapper';
h25 = uimenu(...
'Parent',h25a,...
'Separator','on',...
'Accelerator','3',...
'Callback',@(hObject,eventdata)opticka_ui('OKRunRFMapper_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Run RF Mapper',...
'Tag','OKRunRFMapper',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKPanelProtocols';

h28 = uibuttongroup(...
'Parent',tab3,...
'FontUnits','pixels',...
'Units','normalized',...
'ForegroundColor',[0.313725490196078 0.313725490196078 0.313725490196078],...
'BorderType','none',...
'Title','',...
'Position',[0 0 1 1],...
'Visible','on',...
'BackgroundColor',bcolour,...
'Clipping','off',...
'Tag','OKPanelProtocols',...
'FontSize',12,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKHistoryList';

h29 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String',{  'Listbox' },...
'Style','listbox',...
'Value',1,...
'Position',[0.378578024007387 0.0529411764705882 0.185595567867036 0.888235294117647],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKHistoryList_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKHistoryList',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text96';

h30 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Protocols',...
'Style','text',...
'Position',[0.00738688827331487 0.829411764705882 0.0600184672206833 0.117647058823529],...
'BackgroundColor',bcolour,...
'Children',[],...
'ForegroundColor',[0.313725490196078 0.313725490196078 0.313725490196078],...
'Tag','text96',...
'FontSize',12,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text97';

h31 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','History',...
'Style','text',...
'Position',[0.290740740740741 0.82484520123839 0.0462962962962963 0.118421052631579],...
'BackgroundColor',bcolour,...
'Children',[],...
'ForegroundColor',[0.313725490196078 0.313725490196078 0.313725490196078],...
'Enable','off',...
'Tag','text97',...
'FontSize',12,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKProtocolLoad';

h32 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Load Protocol',...
'Position',[0.00646352723915051 0.629411764705882 0.0831024930747922 0.147058823529412],...
'Callback',@(hObject,eventdata)opticka_ui('OKProtocolLoad_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKProtocolLoad',...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKProtocolSave';

h33 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Save As...',...
'Position',[0.00646352723915051 0.429411764705882 0.0831024930747922 0.147058823529412],...
'Callback',@(hObject,eventdata)opticka_ui('OKProtocolSave_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKProtocolSave',...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKProtocolDuplicate';

h34 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Duplicate Protocol',...
'Position',[0.00646352723915051 0.235294117647059 0.0831024930747922 0.147058823529412],...
'Callback',@(hObject,eventdata)opticka_ui('OKProtocolDuplicate_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKProtocolDuplicate',...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKProtocolDelete';

h35 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Delete...',...
'Position',[0.00646352723915051 0.0352941176470588 0.0831024930747922 0.147058823529412],...
'Callback',@(hObject,eventdata)opticka_ui('OKProtocolDelete_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKProtocolDelete',...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKHistoryUp';

h36 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Move Up',...
'Position',[0.290740740740741 0.677631578947368 0.0833333333333334 0.144736842105263],...
'Callback',@(hObject,eventdata)opticka_ui('OKHistoryUp_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKHistoryUp',...
'FontSize',9.01240963855422,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKHistoryDown';

h37 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Move Down',...
'Position',[0.290740740740741 0.480263157894737 0.0833333333333334 0.144736842105263],...
'Callback',@(hObject,eventdata)opticka_ui('OKHistoryDown_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKHistoryDown',...
'FontSize',9.01240963855422,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKHistoryDelete';

h38 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Delete',...
'Position',[0.290740740740741 0.269736842105263 0.0833333333333334 0.144736842105263],...
'Callback',@(hObject,eventdata)opticka_ui('OKHistoryDelete_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKHistoryDelete',...
'FontSize',9.01240963855422,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKProtocolsList';

h39 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String',{  'X Y Grating'; 'Patch Tuning'; 'Plaid'; 'Reverse Correlation' },...
'Style','listbox',...
'Value',1,...
'Position',[0.0914127423822715 0.0470588235294118 0.185595567867036 0.894117647058823],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKProtocolsList_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKProtocolsList',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel35';

h40 = uipanel(...
'Parent',h28,...
'FontUnits','pixels',...
'Units',get(0,'defaultuipanelUnits'),...
'Title',blanks(0),...
'Position',[0.281481481481481 0.00835913312693499 0.00462962962962965 0.927631578947368],...
'Clipping','off',...
'Tag','uipanel35',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel41';

h41 = uipanel(...
'Parent',h28,...
'FontUnits','pixels',...
'Units',get(0,'defaultuipanelUnits'),...
'Title',blanks(0),...
'Position',[0.569444444444445 0.00835913312693499 0.00462962962962965 0.927631578947368],...
'Clipping','off',...
'Tag','uipanel41',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text181';

h42 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Settings',...
'Style','text',...
'Position',[0.581481481481481 0.901315789473684 0.0462962962962963 0.118421052631579],...
'BackgroundColor',bcolour,...
'Children',[],...
'ForegroundColor',[0.313725490196078 0.313725490196078 0.313725490196078],...
'Tag','text181',...
'FontSize',12,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKSettingsmovieSize';

h43 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','400 400',...
'Style','edit',...
'Position',[0.578947368421053 0.762820512820513 0.0738688827331486 0.134615384615385],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKSettingsmovieSize_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKSettingsmovieSize',...
'UserData',[],...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKSettingsmovieFrames';

h44 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','100',...
'Style','edit',...
'Position',[0.578947368421053 0.442307692307692 0.0738688827331486 0.134615384615385],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKSettingsmovieFrames_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKSettingsmovieFrames',...
'UserData',[],...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKSettingsmoviePrecision';

h45 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Movie High Precision?',...
'Style','checkbox',...
'Position',[0.578947368421053 0.602564102564103 0.110803324099723 0.134615384615385],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKSettingsmoviePrecision_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKSettingsmoviePrecision',...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text182';

h46 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Movie Size',...
'Style','text',...
'Position',[0.655555555555556 0.789304993252362 0.0555555555555556 0.0986842105263158],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text182',...
'UserData',[],...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text183';

h47 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','# Frames',...
'Style','text',...
'Position',[0.655555555555556 0.461032388663968 0.0555555555555556 0.0986842105263158],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text183',...
'UserData',[],...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKSettingsmovieType';

h48 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String',{  'GStreamer'; 'Cortex' },...
'Style','popupmenu',...
'Value',1,...
'Position',[0.578947368421053 0.275641025641026 0.112650046168052 0.134615384615385],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKSettingsmovieType_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKSettingsmovieType',...
'FontSize',9.01240963855422,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKOmniplexIP';

h49 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','144.82.131.19',...
'Style','edit',...
'Position',[0.808333333333334 0.796052631578947 0.101851851851852 0.131578947368421],...
'BackgroundColor',[1 1 1],...
'Children',[],...
'Tag','OKOmniplexIP',...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKOmniplexPort';

h50 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','9889',...
'Style','edit',...
'Position',[0.923145583256387 0.796052631578947 0.0462962962962963 0.131578947368421],...
'BackgroundColor',[1 1 1],...
'Children',[],...
'Tag','OKOmniplexPort',...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text185';

h51 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Port',...
'Style','text',...
'Position',[0.971291166512773 0.828778677462888 0.0231481481481481 0.0789473684210527],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text185',...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKSettingsmovieCodec';

h52 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','default',...
'Style','edit',...
'Position',[0.578947368421053 0.121794871794872 0.0738688827331486 0.134615384615385],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKSettingsmovieCodec_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKSettingsmovieCodec',...
'UserData',[],...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text192';

h53 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Codec',...
'Style','text',...
'Position',[0.656481481481482 0.151821862348178 0.0555555555555556 0.0986842105263158],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text192',...
'UserData',[],...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKOmniplexEnable';

h54 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Omniplex?',...
'Style','checkbox',...
'Position',[0.73 0.8 0.06 0.1],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKOmniplexEnable_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKOmniplexEnable',...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text208';

h55 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','IP',...
'Style','text',...
'Position',[0.91 0.8 0.0101851851851852 0.0789473684210527],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text208',...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKeyeOccluder';

h56 = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','/dev/tty.usbmodem5d11',...
'Style','edit',...
'Position',[0.8 0.63 0.1 0.13],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','OKeyeOccluder',...
'FontSize',9,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKeyeOccluder';

h56b = uicontrol(...
'Parent',h28,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Occluder',...
'Style','text',...
'Position',[0.7 0.63 0.7 0.08],...
'BackgroundColor',[1 1 1],...
'Children',[],...
'Tag','OKeyeOccluder',...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuIO';

h57 = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuIO_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Input Output',...
'Tag','OKMenuIO',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKuseEyeLink';

h58 = uimenu(...
'Parent',h57,...
'Callback',@(hObject,eventdata)opticka_ui('OKuseEyeLink_Callback',hObject,eventdata,guidata(hObject)),...
'Checked','on',...
'Label','Use Eyelink',...
'Tag','OKuseEyeLink',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKuseDataPixx';

h59 = uimenu(...
'Parent',h57,...
'Callback',@(hObject,eventdata)opticka_ui('OKuseDataPixx_Callback',hObject,eventdata,guidata(hObject)),...
'Checked','on',...
'Label','Use DataPixx',...
'Tag','OKuseDataPixx',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKuseLabJack';

h60 = uimenu(...
'Parent',h57,...
'Callback',@(hObject,eventdata)opticka_ui('OKuseLabJack_Callback',hObject,eventdata,guidata(hObject)),...
'Checked','on',...
'Label','Use LabJack',...
'Tag','OKuseLabJack',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKPanelTraining';

h61 = uibuttongroup(...
'Parent',tab2,...
'FontUnits','points',...
'Units','normalized',...
'ForegroundColor',[0.313725490196078 0.313725490196078 0.313725490196078],...
'Title','',...
'BorderType','none',...
'Position',[0 0 1 1],...
'Visible','on',...
'BackgroundColor',bcolour,...
'Clipping','off',...
'Tag','OKPanelTraining',...
'FontSize',12,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKTrainingName';

h62 = uicontrol(...
'Parent',h61,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Simulcra',...
'Style','edit',...
'Position',[0.880666049953747 0.824675324675325 0.062904717853839 0.12987012987013],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKTrainingName_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','on',...
'Tag','OKTrainingName',...
'UserData',[],...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text209';

h63 = uicontrol(...
'Parent',h61,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Subject',...
'Style','text',...
'Position',[0.942645698427383 0.837662337662338 0.0545790934320074 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Enable','on',...
'Tag','text209',...
'UserData',[],...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKLoadStateButton';

h64 = uicontrol(...
'Parent',h61,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Load State File',...
'Position',[0.882516188714154 0.412903225806452 0.108233117483811 0.135483870967742],...
'Callback',@(hObject,eventdata)opticka_ui('OKLoadStateButton_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKLoadStateButton',...
'FontSize',9.99999999999997,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKEditStateFileButon';

h65 = uicontrol(...
'Parent',h61,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Edit State File',...
'Position',[0.882516188714154 0.251612903225806 0.108233117483811 0.135483870967742],...
'Callback',@(hObject,eventdata)opticka_ui('OKEditStateFileButon_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKEditStateFileButon',...
'FontSize',9.99999999999997,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKTrainingResearcherName';

h66 = uicontrol(...
'Parent',h61,...
'FontUnits','pixels',...
'Units','normalized',...
'String','John Doe',...
'Style','edit',...
'Position',[0.880666049953747 0.675324675324675 0.062904717853839 0.12987012987013],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKTrainingResearcherName_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','on',...
'Tag','OKTrainingResearcherName',...
'UserData',[],...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text4554';

h67 = uicontrol(...
'Parent',h61,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Researcher',...
'Style','text',...
'Position',[0.942645698427383 0.688311688311688 0.0545790934320074 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Enable','on',...
'Tag','text4554',...
'UserData',[],...
'FontSize',9,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKRefreshStateInfo';

h69 = uicontrol(...
'Parent',h61,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Refresh View...',...
'Position',[0.882516188714154 0.0903225806451613 0.108233117483811 0.135483870967742],...
'Callback',@(hObject,eventdata)opticka_ui('OKRefreshStateInfo_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKRefreshStateInfo',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKTrainingFileName';

h70 = uicontrol(...
'Parent',h61,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','File Name:',...
'Style','text',...
'Position',[0 0.9 0.8 0.07],...
'BackgroundColor',bcolour,...
'Children',[],...
'ForegroundColor',[0.380392156862745 0.380392156862745 0.380392156862745],...
'Tag','OKTrainingFileName',...
'UserData',[],...
'FontSize',9,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKTrainingText';

h68 = uicontrol(...
'Parent',h61,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'HorizontalAlignment','left',...
'Max',500,...
'String','State Info here...',...
'Style','edit',...
'Value',10,...
'Position',[0.00370027752081406 0.0451612903225806 0.874190564292322 0.870967741935484],...
'BackgroundColor',[0.972549019607843 0.972549019607843 0.972549019607843],...
'Children',[],...
'Tag','OKTrainingText',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKToolbar';

h71 = uitoolbar(...
'Parent',h1,...
'Tag','OKToolbar',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKToolbarInitialise';

h72 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{1},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKToolbarInitialise_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'TooltipString','Initialise Opticka with a fresh set of settings',...
'Tag','OKToolbarInitialise',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = 'Standard.FileOpen';
appdata.CallbackInUse = struct(...
    'ClickedCallback', 'opticka_ui(''OKToolbarOpen_ClickedCallback'',gcbo,[],guidata(gcbo))');
appdata.lastValidTag = 'OKToolbarOpen';

h73 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{2},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKToolbarOpen_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'TooltipString','Open File',...
'BusyAction','cancel',...
'Interruptible','off',...
'Tag','OKToolbarOpen',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKToolbarSave';

h74 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{3},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKToolbarSave_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'TooltipString','Save last run',...
'Tag','OKToolbarSave',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKToolbarDefinePath';

h75 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{4},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKToolbarDefinePath_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Separator','on',...
'TooltipString','Choose a folder to save eyelink and other log files',...
'Tag','OKToolbarDefinePath',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKToggleUI';

h76 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{5},...
'Enable','off',...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKToggleUI_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Separator','on',...
'TooltipString','Toggle settings panels...',...
'Tag','OKToggleUI',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKRFMapper';

h77 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{6},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKRFMapper_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Separator','on',...
'TooltipString','Start the RF Mapper',...
'Tag','OKRFMapper',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKStartTask';

h78 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{7},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKStartTask_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Separator',get(0,'defaultuipushtoolSeparator'),...
'TooltipString','Start a behavioural task...',...
'Tag','OKStartTask',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKToolbarRun';

h79 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{8},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKToolbarRun_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Separator',get(0,'defaultuipushtoolSeparator'),...
'TooltipString','Start a MOC Task',...
'Tag','OKToolbarRun',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKToolbarStop';

h80 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{9},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKToolbarStop_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'TooltipString','STOP',...
'Tag','OKToolbarStop',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKToolbarAbort';

h81 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{10},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKToolbarAbort_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'TooltipString','ABORT',...
'Tag','OKToolbarAbort',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKToolbarTellOmniplex';

h82 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{11},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKPanelTellOmniplex_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Separator','on',...
'TooltipString','Connect to Omniplex!',...
'Tag','OKToolbarTellOmniplex',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKPanelReconnectOmniplex';

h83 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{12},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKPanelReconnectOmniplex_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'TooltipString','Reconnect to Omniplex!',...
'Tag','OKPanelReconnectOmniplex',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKPanelSendOmniplex';

h84 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{13},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKPanelSendOmniplex_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'TooltipString','Send Omniplex Stimulus',...
'Tag','OKPanelSendOmniplex',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKPanelPingOmniplex';

h85 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{14},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKPanelPingOmniplex_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Tag','OKPanelPingOmniplex',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKPanelDisconnectOmniplex';

h86 = uipushtool(...
'Parent',h71,...
'Children',[],...
'CData',mat{15},...
'ClickedCallback',@(hObject,eventdata)opticka_ui('OKPanelDisconnectOmniplex_ClickedCallback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Tag','OKPanelDisconnectOmniplex',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.toolid = [];
appdata.lastValidTag = 'OKToolbarToggleRemote';

h87 = uitoggletool(...
'Parent',h71,...
'Children',[],...
'CData',mat{16},...
'Enable','off',...
'Separator','on',...
'TooltipString','Toggle into remote client mode',...
'OnCallback',@(hObject,eventdata)opticka_ui('OKToolbarToggleRemote_OnCallback',hObject,eventdata,guidata(hObject)),...
'Tag','OKToolbarToggleRemote',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuPreferences';

h88 = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuPreferences_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Calibration',...
'Tag','OKMenuPreferences',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuCalibrateLuminance';

h89 = uimenu(...
'Parent',h88,...
'Separator','on',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuCalibrateLuminance_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Calibrate Gamma...',...
'Tag','OKMenuCalibrateLuminance',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuCalibrateSize';

h90 = uimenu(...
'Parent',h88,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuCalibrateSize_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Calibrate Size...',...
'Tag','OKMenuCalibrateSize',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuLoadGamma';

h91 = uimenu(...
'Parent',h88,...
'Separator','on',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuLoadGamma_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Load Gamma...',...
'Tag','OKMenuLoadGamma',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuSaveGamma';

h92 = uimenu(...
'Parent',h88,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuSaveGamma_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Save Gamma...',...
'Tag','OKMenuSaveGamma',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenumanageCode';

h93 = uimenu(...
'Parent',h88,...
'Enable','off',...
'Separator','on',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenumanageCode_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Check for Updates',...
'Tag','OKMenumanageCode',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuEditConfiguration';

h94 = uimenu(...
'Parent',h88,...
'Enable','off',...
'Separator','on',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuEditConfiguration_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Edit Configuration',...
'Tag','OKMenuEditConfiguration',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKPanelGlobal';

h95 = uibuttongroup(...
'Parent',tab1,...
'FontUnits','pixels',...
'Units',get(0,'defaultuipanelUnits'),...
'ForegroundColor',[0.313725490196078 0.313725490196078 0.313725490196078],...
'TitlePosition','righttop',...
'Title','',...
'BorderType','none',...
'Position',[0 0 1 1],...
'BackgroundColor',bcolour,...
'Clipping','off',...
'Tag','OKPanelGlobal',...
'FontSize',12,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text102';

h96 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Anti-Aliasing',...
'Style','text',...
'Position',[0.277776064686333 0.247077466712811 0.0833333333333334 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text102',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMonitorDistance';

h97 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','57.3',...
'Style','edit',...
'Position',[0.00370027752081406 0.708074534161491 0.101757631822387 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKMonitorDistance_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKMonitorDistance',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKpixelsPerCm';

h98 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','32',...
'Style','edit',...
'Position',[0.00370027752081406 0.546583850931677 0.101757631822387 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKpixelsPerCm_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Pixels per cm as calculated during screen calibration',...
'Tag','OKpixelsPerCm',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text3';

h99 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Monitor',...
'Style','text',...
'Position',[0.108 0.896187683284458 0.067 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text3',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text4';

h100 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Distance (cm)',...
'Style','text',...
'Position',[0.108 0.740301633850021 0.067 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text4',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text5';

h101 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Px / cm',...
'Style','text',...
'Position',[0.108 0.577963971512359 0.067 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text5',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKWindowSize';

h102 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','[]',...
'Style','edit',...
'Position',[0.00370027752081406 0.385093167701863 0.101757631822387 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKWindowSize_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Enter an [] matrix for automatic fullscreen or a [W H] matrix for a widthxheight window',...
'Tag','OKWindowSize',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKscreenXOffset';

h103 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','0',...
'Style','edit',...
'Position',[0.00370027752081406 0.22360248447205 0.101757631822387 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKscreenXOffset_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKscreenXOffset',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKscreenYOffset';

h104 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','0',...
'Style','edit',...
'Position',[0.00370027752081406 0.062111801242236 0.101757631822387 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKscreenYOffset_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKscreenYOffset',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text6';

h105 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','X Center',...
'Style','text',...
'Position',[0.108 0.247077466712811 0.067 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text6',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text7';

h106 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Y Center',...
'Style','text',...
'Position',[0.108 0.0785286242509244 0.067 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text7',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKOpenGLBlending';

h107 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','OpenGL Blending',...
'Style','checkbox',...
'Position',[0.369102682701203 0.739130434782609 0.0999074930619797 0.1],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKOpenGLBlending_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Enable global OpenGL blending mode in PTB?',...
'Tag','OKOpenGLBlending',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text83';

h108 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Window Size',...
'Style','text',...
'Position',[0.108 0.415626309174696 0.067 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text83',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKSelectScreen';

h109 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String',{  '0'; '1' },...
'Style','popupmenu',...
'Value',1,...
'Position',[0.00370027752081406 0.869565217391304 0.101757631822387 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKSelectScreen_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKSelectScreen',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text100';

h110 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Src Blend',...
'Style','text',...
'Position',[0.277520814061055 0.896774193548387 0.0832562442183163 0.0967741935483871],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text100',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text101';

h111 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Dest blend',...
'Style','text',...
'Position',[0.277776064686333 0.740301633850021 0.0833333333333334 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text101',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKHideFlash';

h112 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Hide Flash',...
'Style','checkbox',...
'Position',[0.369102682701203 0.34375 0.0999074930619797 0.1],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKHideFlash_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Use Mario''s gamma trick to hide black flash onset',...
'Tag','OKHideFlash',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKUsePhotoDiode';

h113 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Photodiode',...
'Style','checkbox',...
'Position',[0.485661424606846 0.478260869565217 0.0999074930619797 0.1],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKUsePhotoDiode_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Show a white<->black square to log stimulus onset with a photodiode.',...
'Tag','OKUsePhotoDiode',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKVerbose';

h114 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Verbose',...
'Style','checkbox',...
'Position',[0.369102682701203 0.59375 0.0999074930619797 0.1],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKVerbose_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Show more information in the command window?',...
'Tag','OKVerbose',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKDebug';

h115 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Debug Mode',...
'Style','checkbox',...
'Position',[0.369102682701203 0.46875 0.0999074930619797 0.1],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKDebug_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Show onscreen info and disregard timing errors',...
'Tag','OKDebug',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKGLSrc';

h116 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String',{  'GL_ZERO'; 'GL_ONE'; 'GL_DST_COLOR'; 'GL_ONE_MINUS_DST_COLOR'; 'GL_SRC_ALPHA'; 'GL_ONE_MINUS_SRC_ALPHA'; 'GL_DST_ALPHA'; 'GL_ONE_MINUS_DST_ALPHA'; 'GL_SRC_ALPHA_SATURATE' },...
'Style','popupmenu',...
'Value',2,...
'Position',[0.175763182238668 0.869565217391304 0.0999074930619797 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKGLSrc_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKGLSrc',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKGLDst';

h117 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String',{  'GL_ZERO'; 'GL_ONE'; 'GL_DST_COLOR'; 'GL_ONE_MINUS_DST_COLOR'; 'GL_SRC_ALPHA'; 'GL_ONE_MINUS_SRC_ALPHA'; 'GL_DST_ALPHA'; 'GL_ONE_MINUS_DST_ALPHA'; 'GL_SRC_ALPHA_SATURATE' },...
'Style','popupmenu',...
'Value',1,...
'Position',[0.175763182238668 0.708074534161491 0.0999074930619797 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKGLDst_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKGLDst',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKAntiAliasing';

h118 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','4',...
'Style','edit',...
'Position',[0.175763182238668 0.22360248447205 0.0999074930619797 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKAntiAliasing_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Global anti-aliasing',...
'Tag','OKAntiAliasing',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKNativeBeamPosition';

h119 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Native BeamPos?',...
'Style','checkbox',...
'Position',[0.485661424606846 0.217391304347826 0.0999074930619797 0.1],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKNativeBeamPosition_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Use the OS native beam position (ON) queries or override (OFF) with PTB routine; override is better for OS X along with use of the kernel driver',...
'Tag','OKNativeBeamPosition',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKrecordMovie';

h120 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Record Movie',...
'Style','checkbox',...
'Position',[0.485661424606846 0.347826086956522 0.0999074930619797 0.1],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKrecordMovie_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Enable PTB stimulus recording, currently buggy as gstreamer not stable',...
'Tag','OKrecordMovie',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKUseGamma';

h121 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','None',...
'Style','popupmenu',...
'Value',1,...
'Position',[0.175763182238668 0.385093167701863 0.0999074930619797 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKUseGamma_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKUseGamma',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text189';

h122 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Gamma Correction',...
'Style','text',...
'Position',[0.277776064686333 0.415626309174696 0.0833333333333334 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text189',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKlogFrames';

h123 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Log Times',...
'Style','checkbox',...
'Value',1,...
'Position',[0.485661424606846 0.739130434782609 0.0795559666975024 0.1],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKlogFrames_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Log each frame time to check for dropped frames etc.',...
'Tag','OKlogFrames',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text191';

h124 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Bit Depth',...
'Style','text',...
'Position',[0.277776064686333 0.577963971512359 0.0833333333333334 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'TooltipString','Bit Depth of backing framebuffer',...
'Tag','text191',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKbitDepth';

h125 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String',{  'FloatingPoint32BitIfPossible'; 'FloatingPoint32Bit'; 'FixedPoint16Bit'; 'FloatingPoint16Bit'; '8bit'; 'EnablePseudoGrayOutput'; 'EnableNative10BitFramebuffer' },...
'Style','popupmenu',...
'Value',1,...
'Position',[0.175763182238668 0.546583850931677 0.0999074930619797 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKbitDepth_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKbitDepth',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKverbosityLevel';

h126 = uicontrol(...
'Parent',h95,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','4',...
'Style','edit',...
'Position',[0.175763182238668 0.062111801242236 0.0999074930619797 0.130434782608696],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKverbosityLevel_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Level of verbosity logging used by PTB',...
'Tag','OKverbosityLevel',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKbenchmark';

h127 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Benchmark',...
'Style','checkbox',...
'Position',[0.485661424606846 0.608695652173913 0.0795559666975024 0.1],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKbenchmark_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Flip as fast as possible to test maximum framerate',...
'Tag','OKbenchmark',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text203';

h128 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','PTB Verbosity',...
'TooltipString','Control the verbosity of PTB logging to command window',...
'Style','text',...
'Position',[0.277776064686333 0.0850221307444309 0.0833333333333334 0.0974025974025974],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text203',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKbackgroundColour';

h129 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'String','0.5 0.5 0.5 0',...
'Style','edit',...
'Position',[0.370027752081406 0.883870967741936 0.101757631822387 0.129032258064516],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKbackgroundColour_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKbackgroundColour',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text8';

h130 = uicontrol(...
'Parent',h95,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Background Colour',...
'Style','text',...
'Position',[0.475485661424607 0.910398717691845 0.0925069380203516 0.0774193548387097],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text8',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel45';

h131 = uibuttongroup(...
'Parent',h95,...
'FontUnits','points',...
'Units','normalized',...
'ForegroundColor',[0.313725490196078 0.313725490196078 0.313725490196078],...
'Title','Trial Randomisation Options',...
'Position',[0.588344125809436 0.01875 0.40795559666975 0.9875],...
'BackgroundColor',bcolour,...
'Clipping','off',...
'Tag','uipanel45',...
'FontSize',9.99999999999967,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKRandomise';

h132 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Randomise Order',...
'Style','checkbox',...
'Value',1,...
'Position',[0.0228885196911278 0.27007299270073 0.265446224256293 0.14],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKRandomise_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKRandomise',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKrandomGenerator';

h133 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'String',{  'mt19937ar'; 'mcg16807'; 'mrg32k3a'; 'swb2712' },...
'Style','popupmenu',...
'Value',1,...
'Position',[0.0228885196911278 0.452554744525547 0.251716247139588 0.14],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKrandomGenerator_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKrandomGenerator',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text105';

h134 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Random Algorithm',...
'Style','text',...
'Position',[0.280821917808219 0.496598639455782 0.203196347031963 0.0952380952380952],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text105',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKRandomSeed';

h135 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'String','[]',...
'Style','edit',...
'Position',[0.0228885196911278 0.635036496350365 0.251716247139588 0.14],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKRandomSeed_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Random seed for the random number generator',...
'Tag','OKRandomSeed',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text106';

h136 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Random Seed',...
'Style','text',...
'Position',[0.280821917808219 0.687074829931973 0.166666666666667 0.0952380952380952],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text106',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKnBlocks';

h137 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'String','5',...
'Style','edit',...
'Position',[0.0228885196911278 0.832116788321168 0.251716247139588 0.14],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKnBlocks_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKnBlocks',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKisTime';

h138 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'String','0.5',...
'Style','edit',...
'Position',[0.487414187643021 0.643835616438356 0.251716247139588 0.136986301369863],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKisTime_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Inter-trial time for acute run (not using state machine)',...
'Tag','OKisTime',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text9';

h139 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Trial Blocks',...
'Style','text',...
'Position',[0.280821917808219 0.877551020408163 0.162100456621005 0.0884353741496599],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text9',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text10';

h140 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Intertrial Time',...
'Style','text',...
'Position',[0.745995423340961 0.684931506849315 0.22883295194508 0.089041095890411],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text10',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKitTime';

h141 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'String','1',...
'Style','edit',...
'Position',[0.487414187643021 0.465753424657534 0.251716247139588 0.136986301369863],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKitTime_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Inter-block time for acute run (not using state machine)',...
'Tag','OKitTime',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text104';

h142 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','InterBlock Time',...
'Style','text',...
'Position',[0.745995423340961 0.5 0.22883295194508 0.089041095890411],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text104',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKtrialTime';

h143 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'String','2',...
'Style','edit',...
'Position',[0.487414187643021 0.842465753424657 0.251716247139588 0.136986301369863],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKtrialTime_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','Trial time for MOC task (not using state machine)',...
'Tag','OKtrialTime',...
'FontSize',11,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text107';

h144 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','MOC Trial Time',...
'TooltipString','This is used for MOC tasks, for behavioural tasks it will be overwritten...',...
'Style','text',...
'Position',[0.745995423340961 0.883561643835616 0.247139588100686 0.089041095890411],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text107',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKrealTime';

h145 = uicontrol(...
'Parent',h131,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Use Clock Time?',...
'Style','checkbox',...
'Value',1,...
'Position',[0.0228885196911278 0.10948905109489 0.231121281464531 0.14],...
'BackgroundColor',bcolour,...
'Callback',@(hObject,eventdata)opticka_ui('OKrealTime_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'TooltipString','If ON then we use absoloute time which is less liable to error build-up, otherwise measure time in number of frames needed to show, and even if frames are dropped, opticka simply shows the right number of frames ignoring possible time drift (better for record movie mode)',...
'Tag','OKrealTime',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKPanelStimulusList';

h184 = uipanel(...
'Parent',h146,...
'FontUnits',get(0,'defaultuipanelFontUnits'),...
'Units',get(0,'defaultuipanelUnits'),...
'ForegroundColor',[0.494117647058824 0.494117647058824 0.494117647058824],...
'HighlightColor',bcolour,...
'BorderType','none',...
'TitlePosition','centertop',...
'Title',blanks(0),...
'Position',[0.3 0.45 0.7 0.55],...
'BackgroundColor',bcolour,...
'Clipping','off',...
'Tag','OKPanelStimulus',...
'FontSize',get(0,'defaultuipanelFontSize'),...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKPanelStimulusText';

h185 = uicontrol(...
'Parent',h184,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Stimulus options...',...
'Style','text',...
'Position',[0.38 0.4 0.219286657859974 0.0886699507389163],...
'BackgroundColor',bcolour,...
'Children',[],...
'ForegroundColor',[0.494117647058824 0.494117647058824 0.494117647058824],...
'Enable','off',...
'Tag','OKPanelStimulusText',...
'FontSize',12,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

h147 = uibuttongroup(...
'Parent',h146,...
'FontUnits','pixels',...
'Units','normalized',...
'ForegroundColor',[0.313725490196078 0.313725490196078 0.313725490196078],...
'ShadowColor',[0.501960784313725 0.501960784313725 0.501960784313725],...
'Title','Stimulus List',...
'Position',[0 0.45 0.3 0.55],...
'BackgroundColor',bcolour,...
'Clipping','off',...
'Tag','OKPanelStimulusList',...
'UserData',[],...
'FontSize',11,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKAddStimulus';

h148 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Add',...
'Position',[0.0157232704402516 0.0266706266706267 0.172955974842767 0.113513513513513],...
'Callback',@(hObject,eventdata)opticka_ui('OKAddStimulus_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKAddStimulus',...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKDeleteStimulus';

h149 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Delete',...
'Position',[0.213836477987421 0.0266706266706267 0.172955974842767 0.113513513513513],...
'Callback',@(hObject,eventdata)opticka_ui('OKDeleteStimulus_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKDeleteStimulus',...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKCopyStimulus';

h150 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Copy',...
'Position',[0.411949685534591 0.0266706266706267 0.172955974842767 0.113513513513513],...
'Callback',@(hObject,eventdata)opticka_ui('OKCopyStimulus_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKCopyStimulus',...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKInspectStimulus';

h151 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','?',...
'Position',[0.941747572815534 0.93 0.05 0.06],...
'Callback',@(hObject,eventdata)opticka_ui('OKInspectStimulus_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKInspectStimulus',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKModifyStimulus';

h152 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Modify / Examine',...
'Position',[0.61 0.0266706266706267 0.37 0.113513513513513],...
'Callback',@(hObject,eventdata)opticka_ui('OKModifyStimulus_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKModifyStimulus',...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKStimulusDown';

h153 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','<html>&darr;</html>',...
'Position',[0.883495145631068 0.93 0.05 0.06],...
'Callback',@(hObject,eventdata)opticka_ui('OKStimulusDown_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKStimulusDown',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKStimulusUp';

h154 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','<html>&uarr;</html>',...
'Position',[0.825242718446602 0.93 0.05 0.06],...
'Callback',@(hObject,eventdata)opticka_ui('OKStimulusUp_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKStimulusUp',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKStimulusRun';

h155 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','R',...
'Position',[0.766990291262136 0.93 0.05 0.06],...
'Callback',@(hObject,eventdata)opticka_ui('OKStimulusRun_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'TooltipString','Run the selected stimulus in a window',...
'Tag','OKStimulusRun',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKStimulusRunBenchmark';

h156 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','BR',...
'Position',[0.70873786407767 0.93 0.05 0.06],...
'Callback',@(hObject,eventdata)opticka_ui('OKStimulusRunBenchmark_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'TooltipString','Run the selected stimulus and benchmark maximum FPS',...
'Tag','OKStimulusRunBenchmark',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKStimulusRunAll';

h157 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','A',...
'Position',[0.650485436893204 0.93 0.05 0.06],...
'Callback',@(hObject,eventdata)opticka_ui('OKStimulusRunAll_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'TooltipString','Preview All Stimuli...',...
'Tag','OKStimulusRunAll',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKStimulusRunAllBenchmark';

h158 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','BA',...
'Position',[0.592233009708739 0.93 0.05 0.06],...
'Callback',@(hObject,eventdata)opticka_ui('OKStimulusRunAllBenchmark_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'TooltipString','Benchmark All Stimuli...',...
'Tag','OKStimulusRunAllBenchmark',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKStimList';

h159 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'Style','listbox',...
'Value',1,...
'Position',[0.0157232704402516 0.167567567567568 0.974842767295598 0.756756756756757],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKStimList_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKStimList',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKStimulusRunSingle';

h160 = uicontrol(...
'Parent',h147,...
'FontUnits','pixels',...
'Units','normalized',...
'String','RS',...
'Position',[0.533980582524272 0.93 0.05 0.06],...
'Callback',@(hObject,eventdata)opticka_ui('OKStimulusRunSingle_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'TooltipString','Single run using eyetracker',...
'Tag','OKStimulusRunSingle',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKOmniplexStatus';

h161 = uicontrol(...
'Parent',h146,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','right',...
'String','OPX Server for Online PSTH: disconnected',...
'Style','text',...
'Position',[0.29 0 0.69 0.037],...
'BackgroundColor',bcolour,...
'Children',[],...
'ForegroundColor',[0.2 0.2 0.2],...
'TooltipString','This connection status is for the online display ONLY, it does not affect data collection communication via the datapixx',...
'Tag','OKOmniplexStatus',...
'FontSize',13,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKOptickaVersion';

h162 = uicontrol(...
'Parent',h146,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Loading...',...
'Style','text',...
'Position',[0 0 0.29 0.037],...
'BackgroundColor',bcolour,...
'Children',[],...
'ForegroundColor',[0.6 0.2 0],...
'Tag','OKOptickaVersion',...
'FontSize',13,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKPanelVariables';

h163 = uipanel(...
'Parent',h146,...
'FontUnits','pixels',...
'Units',get(0,'defaultuipanelUnits'),...
'ForegroundColor',[0.380392156862745 0.380392156862745 0.380392156862745],...
'ShadowColor',[0.501960784313725 0.501960784313725 0.501960784313725],...
'TitlePosition','centertop',...
'Title','Independent Variables',...
'Position',[0.3 0.043 0.7 0.4],...
'BackgroundColor',bcolour,...
'Clipping','off',...
'Tag','OKPanelVariables',...
'FontSize',11,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text140';

h164 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Affects Stimuli',...
'Style','text',...
'Position',[0.40132625994695 0.429495059066674 0.0989445910290238 0.0810810810810811],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text140',...
'UserData',[],...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text141';

h165 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Variable Values',...
'Style','text',...
'Position',[0.40132625994695 0.575441005012619 0.0989445910290238 0.081081081081081],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text141',...
'UserData',[],...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text142';

h166 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Variable Name',...
'Style','text',...
'Position',[0.40132625994695 0.726792356363971 0.0989445910290238 0.0810810810810811],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text142',...
'UserData',[],...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKCopyVariableName';

h167 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'String','<<',...
'Position',[0.526385224274406 0.532316341149523 0.050131926121372 0.0812067881835324],...
'Callback',@(hObject,eventdata)opticka_ui('OKCopyVariableName_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKCopyVariableName',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKVariablesLinear';

h168 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'String','lin',...
'Position',[0.0580334959372353 0.558974022566255 0.050131926121372 0.0810810810810811],...
'Callback',@(hObject,eventdata)opticka_ui('OKVariablesLinear_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKVariablesLinear',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKVariablesLog';

h169 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'String','log',...
'Position',[0.0052630473884227 0.558974022566255 0.050131926121372 0.0810810810810811],...
'Callback',@(hObject,eventdata)opticka_ui('OKVariablesLog_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKVariablesLog',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKCopyVariableNameValues';

h170 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'String','<-',...
'Position',[0.526385224274406 0.446252438005015 0.050131926121372 0.081081081081081],...
'Callback',@(hObject,eventdata)opticka_ui('OKCopyVariableNameValues_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKCopyVariableNameValues',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text178';

h171 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'HorizontalAlignment','left',...
'String','Stimulus; Offset',...
'Style','text',...
'Position',[0.40132625994695 0.286737252716634 0.112137203166227 0.0810810810810811],...
'BackgroundColor',bcolour,...
'Children',[],...
'Tag','text178',...
'UserData',[],...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKVariableStimuli';

h172 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'String','1',...
'Style','edit',...
'Position',[0.111405835543767 0.379679144385027 0.290450928381963 0.160427807486631],...
'BackgroundColor',[1 1 1],...
'Children',[],...
'Tag','OKVariableStimuli',...
'UserData',[],...
'FontSize',12,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKVariableValues';

h173 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'String','[-90:45:90]',...
'Style','edit',...
'Position',[0.111405835543767 0.529411764705882 0.290450928381963 0.160427807486631],...
'BackgroundColor',[1 1 1],...
'Children',[],...
'Tag','OKVariableValues',...
'UserData',[],...
'FontSize',12,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKVariableName';

h174 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'String','angle',...
'Style','edit',...
'Position',[0.111405835543767 0.679144385026738 0.290450928381963 0.160427807486631],...
'BackgroundColor',[1 1 1],...
'Children',[],...
'Tag','OKVariableName',...
'UserData',[],...
'FontSize',12,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKVariableOffset';

h175 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'String','[]',...
'Style','edit',...
'Position',[0.111405835543767 0.229946524064171 0.290450928381963 0.160427807486631],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKVariableOffset_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKVariableOffset',...
'UserData',[],...
'FontSize',12,...
'FontName',mfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKVariableList';

h176 = uicontrol(...
'Parent',h163,...
'FontUnits','pixels',...
'Units','normalized',...
'String',{  'xPosition'; 'yPosition'; 'angle'; 'motionAngle'; 'size'; 'sf'; 'tf'; 'contrast'; 'alpha'; 'speed'; 'phase'; 'startPosition'; 'barLength'; 'barWidth'; 'alpha'; 'nDots'; 'coherence'; 'scale'; 'driftDirection' },...
'Style','listbox',...
'Value',1,...
'Position',[0.582228116710875 0.0412371134020619 0.409814323607427 0.95360824742268],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)opticka_ui('OKVariableList_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKVariableList',...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel44';

h177 = uibuttongroup(...
'Parent',h146,...
'FontUnits','pixels',...
'Units','normalized',...
'ForegroundColor',[0.313725490196078 0.313725490196078 0.313725490196078],...
'ShadowColor',[0.5 0.5 0.5],...
'Title','Independent Variable List',...
'Position',[0 0.043 0.3 0.4],...
'BackgroundColor',bcolour,...
'Clipping','off',...
'Tag','uipanel44',...
'UserData',[],...
'FontSize',11,...
'FontName',nfont,...
'FontWeight','bold',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKAddVariable';

h178 = uicontrol(...
'Parent',h177,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Add',...
'Position',[0.0158855751673767 0.0265815265815266 0.232704402515723 0.113513513513513],...
'Callback',@(hObject,eventdata)opticka_ui('OKAddVariable_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','OKAddVariable',...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKDeleteVariable';

h179 = uicontrol(...
'Parent',h177,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Delete',...
'Position',[0.261168594035301 0.0265815265815266 0.232704402515723 0.113513513513513],...
'Callback',@(hObject,eventdata)opticka_ui('OKDeleteVariable_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKDeleteVariable',...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKCopyVariable';

h180 = uicontrol(...
'Parent',h177,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Copy',...
'Position',[0.506451612903226 0.0265815265815266 0.232704402515723 0.113513513513513],...
'Callback',@(hObject,eventdata)opticka_ui('OKCopyVariable_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKCopyVariable',...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKEditVariable';

h181 = uicontrol(...
'Parent',h177,...
'FontUnits','pixels',...
'Units','normalized',...
'String','Edit',...
'Position',[0.754879285859201 0.0265815265815266 0.232704402515723 0.113513513513513],...
'Callback',@(hObject,eventdata)opticka_ui('OKEditVariable_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','off',...
'Tag','OKEditVariable',...
'FontSize',11,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKInspectVariable';

h182 = uicontrol(...
'Parent',h177,...
'FontUnits','pixels',...
'Units','normalized',...
'String','?',...
'Position',[0.94 0.92 0.05 0.08],...
'Callback',@(hObject,eventdata)opticka_ui('OKInspectVariable_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Enable','on',...
'Tag','OKInspectVariable',...
'FontSize',8,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKVarList';

h183 = uicontrol(...
'Parent',h177,...
'FontUnits','pixels',...
'Units','normalized',...
'Style','listbox',...
'Value',1,...
'Position',[0.0158855751673767 0.167567567567568 0.974842767295597 0.756756756756757],...
'BackgroundColor',[1 1 1],...
'Children',[],...
'Tag','OKVarList',...
'FontSize',10,...
'FontName',nfont,...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKPanelStimulus';



appdata = [];
appdata.lastValidTag = 'OKMenuLogs';

h186 = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuLogs_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Logs',...
'Tag','OKMenuLogs',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuAllTimingLogs';

h187 = uimenu(...
'Parent',h186,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuAllTimingLogs_Callback',hObject,eventdata,guidata(hObject)),...
'Label','All Timing Logs',...
'Tag','OKMenuAllTimingLogs',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuStimulusLog';

h188 = uimenu(...
'Parent',h186,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuStimulusLog_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Stimulus Sequence',...
'Tag','OKMenuStimulusLog',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenuShowGammaPlots';

h189 = uimenu(...
'Parent',h186,...
'Callback',@(hObject,eventdata)opticka_ui('OKMenuShowGammaPlots_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Gamma Correction Plots',...
'Tag','OKMenuShowGammaPlots',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'OKMenurfMapperLog';

h190 = uimenu(...
'Parent',h186,...
'Enable','off',...
'Separator','on',...
'Callback',@(hObject,eventdata)opticka_ui('OKMenurfMapperLog_Callback',hObject,eventdata,guidata(hObject)),...
'Label','RF Mapper Log',...
'Tag','OKMenurfMapperLog',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

% if ~isempty(appdata)
%    names = fieldnames(appdata);
%    for i=1:length(names)
%        name = char(names(i));
%        setappdata(hObject, name, getfield(appdata,name));
%    end
% end
% 
% if ~isempty(createfcn)
%    if isa(createfcn,'function_handle')
%        createfcn(hObject, eventdata);
%    else
%        eval(createfcn);
%    end
% end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

gui_StateFields =  {'gui_Name'
    'gui_Singleton'
    'gui_OpeningFcn'
    'gui_OutputFcn'
    'gui_LayoutFcn'
    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error(message('MATLAB:guide:StateFieldNotFound', gui_StateFields{ i }, gui_Mfile));
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % OPTICKA_UI_EXPORT
    % create the GUI only if we are not in the process of loading it
    % already
    gui_Create = true;
elseif local_isInvokeActiveXCallback(gui_State, varargin{:})
    % OPTICKA_UI_EXPORT(ACTIVEX,...)
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif local_isInvokeHGCallback(gui_State, varargin{:})
    % OPTICKA_UI_EXPORT('CALLBACK',hObject,eventData,handles,...)
    gui_Create = false;
else
    % OPTICKA_UI_EXPORT(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = true;
end

if ~gui_Create
    % In design time, we need to mark all components possibly created in
    % the coming callback evaluation as non-serializable. This way, they
    % will not be brought into GUIDE and not be saved in the figure file
    % when running/saving the GUI from GUIDE.
    designEval = false;
    if (numargin>1 && ishghandle(varargin{2}))
        fig = varargin{2};
        while ~isempty(fig) && ~ishghandle(fig,'figure')
            fig = get(fig,'parent');
        end
        
        designEval = isappdata(0,'CreatingGUIDEFigure') || (isscalar(fig)&&isprop(fig,'GUIDEFigure'));
    end
        
    if designEval
        beforeChildren = findall(fig);
    end
    
    % evaluate the callback now
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else       
        feval(varargin{:});
    end
    
    % Set serializable of objects created in the above callback to off in
    % design time. Need to check whether figure handle is still valid in
    % case the figure is deleted during the callback dispatching.
    if designEval && ishghandle(fig)
        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end

    % Check user passing 'visible' P/V pair first so that its value can be
    % used by oepnfig to prevent flickering
    gui_Visible = 'auto';
    gui_VisibleInput = '';
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        % Recognize 'visible' P/V pair
        len1 = min(length('visible'),length(varargin{index}));
        len2 = min(length('off'),length(varargin{index+1}));
        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
            if strncmpi(varargin{index+1},'off',len2)
                gui_Visible = 'invisible';
                gui_VisibleInput = 'off';
            elseif strncmpi(varargin{index+1},'on',len2)
                gui_Visible = 'visible';
                gui_VisibleInput = 'on';
            end
        end
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.

    
    % Do feval on layout code in m-file if it exists
    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
    % this application data is used to indicate the running mode of a GUIDE
    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
    % only used by actxproxy at this time.   
    setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);
    if gui_Exported
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

        % make figure invisible here so that the visibility of figure is
        % consistent in OpeningFcn in the exported GUI case
        if isempty(gui_VisibleInput)
            gui_VisibleInput = get(gui_hFigure,'Visible');
        end
        set(gui_hFigure,'Visible','off')

        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen');
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        end
    end
    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))
        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));
    end

    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    % Singleton setting in the GUI M-file takes priority if different
    gui_Options.singleton = gui_State.gui_Singleton;

    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
%         if gui_Options.syscolorfig
%             set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
%         end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end

    % Apply input P/V pairs other than 'visible'
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        len1 = min(length('visible'),length(varargin{index}));
        if ~strncmpi(varargin{index},'visible',len1)
            try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
        end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end

    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        % Handle the default callbacks of predefined toolbar tools in this
        % GUI, if any
        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
        
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

        % Call openfig again to pick up the saved visibility or apply the
        % one passed in from the P/V pairs
        if ~gui_Exported
            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
        elseif ~isempty(gui_VisibleInput)
            set(gui_hFigure,'Visible',gui_VisibleInput);
        end
        if strcmpi(get(gui_hFigure, 'Visible'), 'on')
            figure(gui_hFigure);
            
            if gui_Options.singleton
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        if isappdata(gui_hFigure,'InGUIInitialization')
            rmappdata(gui_hFigure,'InGUIInitialization');
        end

        % If handle visibility is set to 'callback', turn it on until
        % finished with OutputFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end

    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end

function gui_hFigure = local_openfig(name, singleton, visible)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
if nargin('openfig') == 2
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
else
    % Call version of openfig that accepts 'auto' option"
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton, visible);  
%     %workaround for CreateFcn not called to create ActiveX
%     if feature('HGUsingMATLABClasses')
%         peers=findobj(findall(allchild(gui_hFigure)),'type','uicontrol','style','text');    
%         for i=1:length(peers)
%             if isappdata(peers(i),'Control')
%                 actxproxy(peers(i));
%             end            
%         end
%     end
end

function result = local_isInvokeActiveXCallback(gui_State, varargin)

try
    result = ispc && iscom(varargin{1}) ...
             && isequal(varargin{1},gcbo);
catch
    result = false;
end

function result = local_isInvokeHGCallback(gui_State, varargin)

try
    fhandle = functions(gui_State.gui_Callback);
    result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...
             (ischar(varargin{1}) ...
             && isequal(ishghandle(varargin{2}), 1) ...
             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );
catch
    result = false;
end